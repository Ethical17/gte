$PBExportHeader$f_check_special_char.srf
global type f_check_special_char from function_object
end type

forward prototypes
global function integer f_check_special_char (string fs_value)
end prototypes

global function integer f_check_special_char (string fs_value);long l_ctr,i,l_ascii
string ls_char

select length(:fs_value) into :l_ctr from dual;
for i = 1 to l_ctr
	select substr(:fs_value,:i,1) into :ls_char from dual;
	select ascii(:ls_char) into :l_ascii from dual;
	//32 33 34 35 36 37 38 39 40 41 43 44 45 46 47 58 59 60 61 62 63 64 91 92 93 94 95 96 123 124 125 126
	if (l_ascii > 32 and l_ascii < 42)  then
 		messagebox("Alert !","Special character ("+ ls_char +") are not allowed !!!")
		return -1
	elseif (l_ascii > 42 and l_ascii < 48)  then
		messagebox("Alert !","Special character ("+ ls_char +") are not allowed !!!")
		return -1
	elseif (l_ascii > 57 and l_ascii < 65) then
		messagebox("Alert !","Special character ("+ ls_char +") are not allowed !!!")
		return -1
	elseif	(l_ascii > 90 and l_ascii < 97) then
		messagebox("Alert !","Special character ("+ ls_char +") are not allowed !!!")
		return -1
	elseif	(l_ascii > 122 and l_ascii < 127) then
		messagebox("Alert !","Special character ("+ ls_char +") are not allowed !!!")
		return -1
	end if
next 

return 1
end function

